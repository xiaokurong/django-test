python第三方模块或有意思的标准库
1. Faker  自动生成模拟人员信息，主要用来测试
	安装： pip install Faker
	
	使用：
		>>> from faker import Factory
		>>> fake = Factory.create()

		>>> # OR
		>>> from faker import Faker
		>>> fake = Faker()

		>>> fake.name()
		'Lucy Cechtelar'

		>>> fake.address()
		'426 Jordy Lodge Cartwrightshire, SC 88120-6700'
	
	本地化
		>>> from faker import Factory
		>>> fake = Factory.create('zh_CN')

		>>> for _ in range(0, 10):
		...     print(fake.name())
		...
		於涛
		万静
		孙秀荣
		丘辉
		方玉
		虞建国
		丘丽丽
		郭杨
		江欣
		狐龙
		
	命令行使用：
		$ faker address
		968 Bahringer Garden Apt. 722Kristinaland, NJ 09890

		$ faker -l de_DE address
		Samira-Niemeier-Allee 5694812 Biedenkopf

		$ faker profile ssn,birthdate
		{'ssn': u'628-10-1085', 'birthdate': '2008-03-29'}

		$ faker -r=3 -s=";" name
		Willam Kertzmann;
		Josiah Maggio;
		Gayla Schmitt;
		
2.  argparse   : 进行命令行的参数格式化，属于标准库
	使用：
		# 命令行解析
		parser = argparse.ArgumentParser(prog='agentx')

		# 配置文件选项
		parser.add_argument(
			'-c',
			'--conf',
			dest='conf_path',
			metavar='conf_path',
			default='',
			required=False,
			help='configuration file path',
		)

		# 操作选项
		parser.add_argument(
			'action',
			nargs=1,
			metavar='action',
			choices=('status', 'start', 'stop',),
			help='action to carry out: status/start/stop',
		)

		# 解析
		args = parser.parse_args()

	结果展示：
		python agentx.py -h
		usage: agentx [-h] [-c conf_path] action

		positional arguments:
		  action                action to carry out: status/start/stop

		optional arguments:
		  -h, --help            show this help message and exit
		  -c conf_path, --conf conf_path
								configuration file path
								
3. pyinstaller python程序打包成单独的可执行程序
	安装：
	pip install pyinstaller
	
	使用：
	pyinstaller -F chengxu_name.py
	
	
4. difflib 计算字符相似度
	使用：
	from difflib import SequenceMatcher
	def similarity(a,b):
		return SequenceMatcher(None,a,b),ratio()
		
	similarity('abc','abcd')
	>>0.8571428571428571

5. IPy 处理ip地址和网段的类库
	安装：
	pip install IPy
	
	使用：
	from IPy import IP
	ip=IP('10.1.1.0/30')
	for x in ip:
		print(x)
		
	>>10.1.1.0
	>>10.1.1.1
	>>10.1.1.2
	>>10.1.1.3
	
6. re 正则表达式模块
	group（）在正则表达式中用于获取分段截获的字符串
		import re
		a = "123abc456"
		print re.search("([0-9]*)([a-z]*)([0-9]*)",a).group(0)    #123abc456,返回整体
		print re.search("([0-9]*)([a-z]*)([0-9]*)",a).group(1)    #123
		print re.search("([0-9]*)([a-z]*)([0-9]*)",a).group(2)    #abc
		print re.search("([0-9]*)([a-z]*)([0-9]*)",a).group(3)    #456

		
		
7. pickle 对象序列化，pickle提供四个功能：dumps,dump,loads,load
		# dumps功能
		import pickle
		data = ['aa', 'bb', 'cc']  
		# dumps 将数据通过特殊的形式转换为只有python语言认识的字符串
		p_str = pickle.dumps(data)
		print(p_str)            
		b'\x80\x03]q\x00(X\x02\x00\x00\x00aaq\x01X\x02\x00\x00\x00bbq\x02X\x02\x00\x00\x00ccq\x03e.
		
		# loads功能
		# loads  将pickle数据转换为python的数据结构
		mes = pickle.loads(p_str)
		print(mes)
		['aa', 'bb', 'cc']
		
		# dump功能
		# dump 将数据通过特殊的形式转换为只有python语言认识的字符串，并写入文件
		with open('D:/tmp.pk', 'w') as f:
		    pickle.dump(data, f)
			
		# load功能
		# load 从数据文件中读取数据，并转换为python的数据结构
		with open('D:/tmp.pk', 'r') as f:
		   data = pickle.load(f)
		   
8. MyQR 二维码生成库
	安装：
		pip install MyQR
		
	使用：
		from MyQR import myqr
		myqr.run(
			words='https://www.baidu.com',              ##二维码连接地址
			colorized=True,                             ##是否彩色
			picture='G:/python_source/test1/123.jpg',   ## 路径要写成linux形式
			save_name='myerweim1.png',                  ##文件扩展名需要使用png
		)

9. True 和 False的特殊用法
	True and 10   ==> 10
	False and 10  ==> False
	True or 10    ==> True
	False or 10   ==> 10
	10 and 20     ==> 20
	20 and 10     ==> 10
	10 or 20      ==> 10
	20 or 10      ==> 20
	a=10 b=5  c=(a>b and a or c)  ==>c=10
	a=5  b=10 c=(a>b and a or c)  ==>c=10